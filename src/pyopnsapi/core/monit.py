# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/monit.html

from pyopnsapi import client


class ServiceClient(client.OPNClient):
    """A client for interacting with the Monit/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def check(self):
      return self._post("monit/service/check")

    def reconfigure(self):
      return self._post("monit/service/reconfigure")

    def restart(self):
      return self._post("monit/service/restart")

    def start(self):
      return self._post("monit/service/start")

    def status(self):
      return self._get("monit/service/status")

    def stop(self):
      return self._post("monit/service/stop")


class SettingsClient(client.OPNClient):
    """A client for interacting with the Monit/Settings endpoint.

    Model Schema: https://github.com/opnsense/core/blob/master/src/opnsense/mvc/app/models/OPNsense/Monit/Monit.xml

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_alert(self):
      return self._post("monit/settings/add_alert")

    def add_service(self):
      return self._post("monit/settings/add_service")

    def add_test(self):
      return self._post("monit/settings/add_test")

    def get(self):
      return self._get("monit/settings/get")

    def get_general(self):
      return self._get("monit/settings/get_general")

    def get_search_alert(self):
      return self._get("monit/settings/search_alert")

    def post_search_alert(self):
      return self._post("monit/settings/search_alert")

    def get_search_service(self):
      return self._get("monit/settings/search_service")

    def post_search_service(self):
      return self._post("monit/settings/search_service")

    def get_search_test(self):
      return self._get("monit/settings/search_test")

    def post_search_test(self):
      return self._post("monit/settings/search_test")

    def set(self):
      return self._post("monit/settings/set")


class StatusClient(client.OPNClient):
    """A client for interacting with the Monit/Status endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """


