# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/openvpn.html

from pyopnsapi import client


class ClientOverwritesClient(client.OPNClient):
    """A client for interacting with the Openvpn/ClientOverwrites endpoint.

    Model Schema: https://github.com/opnsense/core/blob/master/src/opnsense/mvc/app/models/OPNsense/OpenVPN/OpenVPN.xml

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add(self):
      return self._post("openvpn/client_overwrites/add")

    def get_search(self):
      return self._get("openvpn/client_overwrites/search")

    def post_search(self):
      return self._post("openvpn/client_overwrites/search")


class ExportClient(client.OPNClient):
    """A client for interacting with the Openvpn/Export endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def providers(self):
      return self._get("openvpn/export/providers")

    def templates(self):
      return self._get("openvpn/export/templates")


class InstancesClient(client.OPNClient):
    """A client for interacting with the Openvpn/Instances endpoint.

    Model Schema: https://github.com/opnsense/core/blob/master/src/opnsense/mvc/app/models/OPNsense/OpenVPN/OpenVPN.xml

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add(self):
      return self._post("openvpn/instances/add")

    def add_static_key(self):
      return self._post("openvpn/instances/add_static_key")

    def get_search(self):
      return self._get("openvpn/instances/search")

    def post_search(self):
      return self._post("openvpn/instances/search")

    def get_search_static_key(self):
      return self._get("openvpn/instances/search_static_key")

    def post_search_static_key(self):
      return self._post("openvpn/instances/search_static_key")


class ServiceClient(client.OPNClient):
    """A client for interacting with the Openvpn/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def kill_session(self):
      return self._post("openvpn/service/kill_session")

    def reconfigure(self):
      return self._post("openvpn/service/reconfigure")

    def search_routes(self):
      return self._get("openvpn/service/search_routes")

    def search_sessions(self):
      return self._get("openvpn/service/search_sessions")

