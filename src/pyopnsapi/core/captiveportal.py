# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/captiveportal.html

from pyopnsapi import client


class AbstractAccessClient(client.OPNClient):
    """A client for interacting with the Captiveportal/AbstractAccess endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def api(self):
      return self._get("captiveportal/abstract_access/api")


class AccessClient(client.OPNClient):
    """A client for interacting with the Captiveportal/Access endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """



class ServiceClient(client.OPNClient):
    """A client for interacting with the Captiveportal/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def reconfigure(self):
      return self._post("captiveportal/service/reconfigure")

    def save_template(self):
      return self._post("captiveportal/service/save_template")

    def search_templates(self):
      return self._get("captiveportal/service/search_templates")


class SessionClient(client.OPNClient):
    """A client for interacting with the Captiveportal/Session endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def search(self):
      return self._get("captiveportal/session/search")

    def zones(self):
      return self._get("captiveportal/session/zones")


class SettingsClient(client.OPNClient):
    """A client for interacting with the Captiveportal/Settings endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_zone(self):
      return self._post("captiveportal/settings/add_zone")

    def get(self):
      return self._get("captiveportal/settings/get")

    def get_search_zones(self):
      return self._get("captiveportal/settings/search_zones")

    def post_search_zones(self):
      return self._post("captiveportal/settings/search_zones")

    def set(self):
      return self._post("captiveportal/settings/set")


class VoucherClient(client.OPNClient):
    """A client for interacting with the Captiveportal/Voucher endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def list_providers(self):
      return self._get("captiveportal/voucher/list_providers")

