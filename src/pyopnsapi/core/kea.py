# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/kea.html

from pyopnsapi import client


class CtrlAgentClient(client.OPNClient):
    """A client for interacting with the Kea/CtrlAgent endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def get(self):
      return self._get("kea/ctrl_agent/get")

    def set(self):
      return self._post("kea/ctrl_agent/set")


class Dhcpv4Client(client.OPNClient):
    """A client for interacting with the Kea/Dhcpv4 endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_peer(self):
      return self._post("kea/dhcpv4/add_peer")

    def add_reservation(self):
      return self._post("kea/dhcpv4/add_reservation")

    def add_subnet(self):
      return self._post("kea/dhcpv4/add_subnet")

    def download_reservations(self):
      return self._get("kea/dhcpv4/download_reservations")

    def get(self):
      return self._get("kea/dhcpv4/get")

    def get_search_peer(self):
      return self._get("kea/dhcpv4/search_peer")

    def post_search_peer(self):
      return self._post("kea/dhcpv4/search_peer")

    def get_search_reservation(self):
      return self._get("kea/dhcpv4/search_reservation")

    def post_search_reservation(self):
      return self._post("kea/dhcpv4/search_reservation")

    def get_search_subnet(self):
      return self._get("kea/dhcpv4/search_subnet")

    def post_search_subnet(self):
      return self._post("kea/dhcpv4/search_subnet")

    def set(self):
      return self._post("kea/dhcpv4/set")

    def upload_reservations(self):
      return self._post("kea/dhcpv4/upload_reservations")


class Dhcpv6Client(client.OPNClient):
    """A client for interacting with the Kea/Dhcpv6 endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_pd_pool(self):
      return self._post("kea/dhcpv6/add_pd_pool")

    def add_peer(self):
      return self._post("kea/dhcpv6/add_peer")

    def add_reservation(self):
      return self._post("kea/dhcpv6/add_reservation")

    def add_subnet(self):
      return self._post("kea/dhcpv6/add_subnet")

    def download_reservations(self):
      return self._get("kea/dhcpv6/download_reservations")

    def get(self):
      return self._get("kea/dhcpv6/get")

    def get_search_pd_pool(self):
      return self._get("kea/dhcpv6/search_pd_pool")

    def post_search_pd_pool(self):
      return self._post("kea/dhcpv6/search_pd_pool")

    def get_search_peer(self):
      return self._get("kea/dhcpv6/search_peer")

    def post_search_peer(self):
      return self._post("kea/dhcpv6/search_peer")

    def get_search_reservation(self):
      return self._get("kea/dhcpv6/search_reservation")

    def post_search_reservation(self):
      return self._post("kea/dhcpv6/search_reservation")

    def get_search_subnet(self):
      return self._get("kea/dhcpv6/search_subnet")

    def post_search_subnet(self):
      return self._post("kea/dhcpv6/search_subnet")

    def set(self):
      return self._post("kea/dhcpv6/set")

    def upload_reservations(self):
      return self._post("kea/dhcpv6/upload_reservations")


class LeasesClient(client.OPNClient):
    """A client for interacting with the Kea/Leases endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def search(self):
      return self._get("kea/leases/search")


class ServiceClient(client.OPNClient):
    """A client for interacting with the Kea/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def reconfigure(self):
      return self._post("kea/service/reconfigure")

    def restart(self):
      return self._post("kea/service/restart")

    def start(self):
      return self._post("kea/service/start")

    def status(self):
      return self._get("kea/service/status")

    def stop(self):
      return self._post("kea/service/stop")

