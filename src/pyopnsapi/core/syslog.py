# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/syslog.html

from pyopnsapi import client


class ServiceClient(client.OPNClient):
    """A client for interacting with the Syslog/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def reconfigure(self):
      return self._post("syslog/service/reconfigure")

    def reset(self):
      return self._post("syslog/service/reset")

    def restart(self):
      return self._post("syslog/service/restart")

    def start(self):
      return self._post("syslog/service/start")

    def stats(self):
      return self._get("syslog/service/stats")

    def status(self):
      return self._get("syslog/service/status")

    def stop(self):
      return self._post("syslog/service/stop")


class SettingsClient(client.OPNClient):
    """A client for interacting with the Syslog/Settings endpoint.

    Model Schema: https://github.com/opnsense/core/blob/master/src/opnsense/mvc/app/models/OPNsense/Syslog/Syslog.xml

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_destination(self):
      return self._post("syslog/settings/add_destination")

    def get(self):
      return self._get("syslog/settings/get")

    def get_search_destinations(self):
      return self._get("syslog/settings/search_destinations")

    def post_search_destinations(self):
      return self._post("syslog/settings/search_destinations")

    def set(self):
      return self._post("syslog/settings/set")

