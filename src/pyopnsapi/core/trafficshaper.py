# Auto-generated by extract.rb
# API Documentation: https://docs.opnsense.org/development/api/core/trafficshaper.html

from pyopnsapi import client


class ServiceClient(client.OPNClient):
    """A client for interacting with the Trafficshaper/Service endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def flushreload(self):
      return self._post("trafficshaper/service/flushreload")

    def reconfigure(self):
      return self._post("trafficshaper/service/reconfigure")

    def statistics(self):
      return self._get("trafficshaper/service/statistics")


class SettingsClient(client.OPNClient):
    """A client for interacting with the Trafficshaper/Settings endpoint.

    :param str api_key: The API key to use for requests
    :param str api_secret: The API secret to use for requests
    :param str base_url: The base API endpoint for the OPNsense deployment
    :param int timeout: The timeout in seconds for API requests
    """

    def add_pipe(self):
      return self._post("trafficshaper/settings/add_pipe")

    def add_queue(self):
      return self._post("trafficshaper/settings/add_queue")

    def add_rule(self):
      return self._post("trafficshaper/settings/add_rule")

    def get(self):
      return self._get("trafficshaper/settings/get")

    def get_search_pipes(self):
      return self._get("trafficshaper/settings/search_pipes")

    def post_search_pipes(self):
      return self._post("trafficshaper/settings/search_pipes")

    def get_search_queues(self):
      return self._get("trafficshaper/settings/search_queues")

    def post_search_queues(self):
      return self._post("trafficshaper/settings/search_queues")

    def get_search_rules(self):
      return self._get("trafficshaper/settings/search_rules")

    def post_search_rules(self):
      return self._post("trafficshaper/settings/search_rules")

    def set(self):
      return self._post("trafficshaper/settings/set")

